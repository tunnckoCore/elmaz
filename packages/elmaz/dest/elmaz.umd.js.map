{"version":3,"file":"elmaz.umd.js","sources":["../../create-view/dest/index.es.js","../../emitter/dest/index.es.js","../../create-actor/dest/index.es.js","../../create-store/dest/index.es.js","../index.js"],"sourcesContent":["function createView (viewFn, actor) {\n  let context = {\n    emit: actor.emit,\n    store: actor.store,\n    actions: actor.actions,\n    dispatch: actor.dispatch,\n  };\n\n  let el = null;\n  let view = (a, b, c) => (el = viewFn(a, b, c));\n\n  actor.off('stateChange');\n  actor.on('stateChange', (ctx) => {\n    context = Object.assign({}, context, ctx);\n    actor.emit('render', view, context, el);\n  });\n  actor.emit('render', view, context, el);\n\n  return el\n}\n\nexport default createView;\n","function emitter (events) {\n  events = Object.assign({}, events);\n\n  const app = {\n    events,\n    on (name, listener) {\n      (events[name] || (events[name] = [])).push(listener);\n    },\n\n    off (name, listener) {\n      if (events[name] && listener) {\n        events[name].splice(events[name].indexOf(listener) >>> 0, 1);\n      } else if (name && !listener) {\n        app.events[name] = events[name] = [];\n      } else {\n        app.events = events = {};\n      }\n    },\n\n    // eslint-disable-next-line\n    emit(name, a, b, c) {\n      (events[name] || []).map((listener) => {\n        listener(a, b, c);\n      })\n      ;(events['*'] || []).map((listener) => {\n        listener(name, a, b, c);\n      });\n    },\n\n    use (plugin) {\n      return Object.assign({}, app, plugin(app))\n    },\n  };\n\n  return app\n}\n\nexport default emitter;\n","import emitter from '@elmaz/emitter';\n\nfunction createActor (actions) {\n  const actor = emitter();\n  actor._rawActions = Object.assign({}, actions);\n\n  actor.connect = (store) => {\n    actor.store = store;\n\n    // eslint-disable-next-line\n    actor.dispatch = (actionName, aa, bb, cc) => {\n      actor.actions[actionName](aa, bb, cc);\n    };\n\n    actor.actions = Object.keys(actor._rawActions).reduce((memo, name) => {\n      memo[name] = function action_ (a, b, c) {\n        actor.emit('action', name, a, b, c);\n\n        const context = {\n          emit: actor.emit,\n          state: actor.store.state,\n          actions: actor.actions,\n          dispatch: actor.dispatch,\n          update: (val) => (store) => Object.assign({}, store.state, val),\n        };\n\n        let result = null;\n\n        try {\n          result = actor._rawActions[name](context, a, b, c);\n        } catch (er) {\n          actor.emit('error', er);\n        }\n\n        // if `result` is function, action is reducer\n        if (typeof result === 'function') {\n          const oldState = Object.assign({}, store.state);\n          // intentionally hard update the state,\n          // because we provide \"soft update\" to each action\n          store.state = store.update(result({ state: oldState }), true);\n\n          actor.emit('stateChange', {\n            prev: oldState,\n            state: store.state,\n          });\n          return null\n        }\n\n        // otherwise, assumes action is effect\n        return result\n      };\n\n      return memo\n    }, {});\n  };\n\n  return actor\n}\n\nexport default createActor;\n","function createStore (state, name) {\n  state = Object.assign({}, state);\n\n  function update (newState, hardUpdate) {\n    if (!newState) {\n      return null\n    }\n\n    update.state = hardUpdate\n      ? Object.assign({}, newState)\n      : Object.assign({}, state, newState);\n\n    return update.state\n  }\n\n  update.update = update;\n  update.state = update.state || state;\n  update._name = name;\n  return update\n}\n\nexport default createStore;\n","import createView from '@elmaz/create-view'\nimport createActor from '@elmaz/create-actor'\nimport createStore from '@elmaz/create-store'\n\nfunction elmaz (opts) {\n  opts = Object.assign({}, opts)\n\n  const actor = createActor(opts.actions)\n\n  actor.connect(createStore(opts.state, opts.name))\n  actor.options = opts\n\n  if (opts.view) {\n    actor.on('render', (view, context) => view(context))\n    actor.tree = createView(opts.view, actor)\n  }\n\n  return actor\n}\n\nexport { elmaz, createActor, createStore, createView }\n"],"names":["createView","viewFn","actor","let","context","emit","store","actions","dispatch","el","view","a","b","c","off","on","ctx","Object","assign","emitter","events","const","app","name","listener","push","splice","indexOf","map","use","plugin","createActor","_rawActions","connect","actionName","aa","bb","cc","keys","reduce","memo","state","update","val","result","er","oldState","prev","createStore","newState","hardUpdate","_name","opts","options","tree"],"mappings":"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"}